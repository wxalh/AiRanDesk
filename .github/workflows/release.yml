name: Build & Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64
            triplet: x64-linux
            ext: tar.gz
          - os: windows-latest
            arch: x64
            triplet: x64-windows
            ext: zip
          - os: macos-latest
            arch: x64
            triplet: x64-osx
            ext: tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh || ./bootstrap-vcpkg.bat

      - name: Install vcpkg dependencies
        run: |
          ./vcpkg/vcpkg install --triplet=${{ matrix.triplet }}

      - name: Install build dependencies (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt-get update && sudo apt-get install -y build-essential ninja-build pkg-config python3 python3-jinja2 nasm meson

      - name: Install build dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install cmake ninja pkg-config

      - name: Install build dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install cmake ninja -y

      - name: Configure and Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      - name: Package binary
        run: |
          cd build
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            powershell -command "Compress-Archive -Path * -DestinationPath ../${{ github.event.repository.name }}-${{ matrix.arch }}-win.zip"
          else
            tar -czvf ../${{ github.event.repository.name }}-${{ matrix.arch }}-${{ matrix.os == 'macos-latest' && 'macos' || 'linux' }}.tar.gz *
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ github.event.repository.name }}-*-win.zip
            ${{ github.event.repository.name }}-*-linux.tar.gz
            ${{ github.event.repository.name }}-*-macos.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}