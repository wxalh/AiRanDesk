name: Multi-Platform Build & Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (å¦‚ v1.0.0)'
        required: false
        default: ''

jobs:
  build-win32-msvc:
    runs-on: windows-latest
    timeout-minutes: 4320
    steps:
      - uses: actions/checkout@v4
      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git
      - name: Bootstrap vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: vcpkg\installed
          key: vcpkg-win32-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-win32-
      - name: Install vcpkg dependencies
        run: .\vcpkg\vcpkg.exe install --triplet x86-windows
      - name: Build Project
        run: |
          mkdir build
          cd build
          cmake .. -A Win32
          cmake --build . --config Release
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: win32-msvc-lib
          path: build/Release/*

  build-win64-msvc:
    runs-on: windows-latest
    timeout-minutes: 4320
    steps:
      - uses: actions/checkout@v4
      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git
      - name: Bootstrap vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: vcpkg\installed
          key: vcpkg-win64-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-win64-
      - name: Install vcpkg dependencies
        run: .\vcpkg\vcpkg.exe install --triplet x64-windows
      - name: Build Project
        run: |
          mkdir build
          cd build
          cmake .. -A x64
          cmake --build . --config Release
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: win64-msvc-lib
          path: build/Release/*

  build-win-arm:
    runs-on: windows-latest
    timeout-minutes: 4320
    steps:
      - uses: actions/checkout@v4
      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git
      - name: Bootstrap vcpkg
        run: .\vcpkg\bootstrap-vcpkg.bat
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: vcpkg\installed
          key: vcpkg-arm-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-arm-
      - name: Install vcpkg dependencies
        run: .\vcpkg\vcpkg.exe install --triplet arm64-windows
      - name: Build Project
        run: |
          mkdir build
          cd build
          cmake .. -A ARM64
          cmake --build . --config Release
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-arm-lib
          path: build/Release/*

  build-ubuntu:
    runs-on: ubuntu-latest
    timeout-minutes: 4320
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y nasm pkg-config meson ninja-build build-essential python3 python3-jinja2 libdbus-1-dev libxi-dev libxtst-dev
          sudo apt install -y '^libxcb.*-dev' libx11-xcb-dev libgl1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev libfontconfig1-dev libfreetype6-dev libharfbuzz-dev
      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git
      - name: Bootstrap vcpkg
        run: ./vcpkg/bootstrap-vcpkg.sh
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: vcpkg/installed
          key: vcpkg-ubuntu-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-ubuntu-
      - name: Install vcpkg dependencies
        run: ./vcpkg/vcpkg install --triplet x64-linux
      - name: Build Project
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-lib
          path: build/*

  build-macos:
    runs-on: macos-latest
    timeout-minutes: 4320
    steps:
      - uses: actions/checkout@v4
      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git
      - name: Bootstrap vcpkg
        run: ./vcpkg/bootstrap-vcpkg.sh
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: vcpkg/installed
          key: vcpkg-macos-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-macos-
      - name: Install vcpkg dependencies
        run: ./vcpkg/vcpkg install --triplet x64-osx
      - name: Build Project
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-lib
          path: build/*

  release:
    runs-on: ubuntu-latest
    needs: [build-win32-msvc, build-win64-msvc, build-win-arm, build-ubuntu, build-macos]
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release_assets
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.release_tag || 'auto-release-' }}${{ github.run_id }}
          name: "Auto Release ${{ github.run_id }}"
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: ./release_assets/**/*
